"""update

Revision ID: a7d5d081a14b
Revises: 
Create Date: 2021-02-25 21:57:59.179175

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a7d5d081a14b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('username', sa.String(length=128), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('token', sa.String(length=256), nullable=True),
    sa.Column('avatar_s', sa.String(length=64), nullable=True),
    sa.Column('avatar_m', sa.String(length=64), nullable=True),
    sa.Column('avatar_l', sa.String(length=64), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('tag', sa.String(length=32), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_product_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product'))
    )
    op.create_table('apitest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('results', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_apitest_product_id_product')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_apitest_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_apitest'))
    )
    with op.batch_alter_table('apitest', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_apitest_task_id'), ['task_id'], unique=False)

    op.create_table('apiurl',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('url', sa.String(length=512), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_apiurl_product_id_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_apiurl'))
    )
    op.create_table('bug',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('casename', sa.String(length=256), nullable=True),
    sa.Column('stepname', sa.String(length=512), nullable=True),
    sa.Column('request', sa.Text(), nullable=True),
    sa.Column('detail', sa.Text(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('level', sa.String(length=10), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_bug_product_id_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bug'))
    )
    with op.batch_alter_table('bug', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bug_task_id'), ['task_id'], unique=False)

    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('types', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('result', sa.String(length=2048), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_report_product_id_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_report'))
    )
    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_report_task_id'), ['task_id'], unique=False)

    op.create_table('work',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(length=256), nullable=True),
    sa.Column('name', sa.String(length=512), nullable=True),
    sa.Column('hostname', sa.String(length=512), nullable=True),
    sa.Column('params', sa.String(length=512), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name=op.f('fk_work_product_id_product')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_work'))
    )
    with op.batch_alter_table('work', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_work_task_id'), ['task_id'], unique=False)

    op.create_table('apistep',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('method', sa.String(length=16), nullable=True),
    sa.Column('route', sa.String(length=512), nullable=True),
    sa.Column('headers', sa.Text(), nullable=True),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.Column('expected_result', sa.String(length=512), nullable=True),
    sa.Column('expected_regular', sa.String(length=512), nullable=True),
    sa.Column('request_extract', sa.String(length=512), nullable=True),
    sa.Column('response_extract', sa.String(length=512), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('results', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('apiurl_id', sa.Integer(), nullable=True),
    sa.Column('apitest_id', sa.Integer(), nullable=True),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['apitest_id'], ['apitest.id'], name=op.f('fk_apistep_apitest_id_apitest')),
    sa.ForeignKeyConstraint(['apiurl_id'], ['apiurl.id'], name=op.f('fk_apistep_apiurl_id_apiurl')),
    sa.ForeignKeyConstraint(['report_id'], ['report.id'], name=op.f('fk_apistep_report_id_report')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_apistep'))
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.drop_index('ix_apscheduler_jobs_next_run_time')

    op.drop_table('apscheduler_jobs')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apscheduler_jobs',
    sa.Column('id', mysql.VARCHAR(length=191), nullable=False),
    sa.Column('next_run_time', mysql.DOUBLE(asdecimal=True), nullable=True),
    sa.Column('job_state', sa.BLOB(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index('ix_apscheduler_jobs_next_run_time', ['next_run_time'], unique=False)

    op.drop_table('apistep')
    with op.batch_alter_table('work', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_work_task_id'))

    op.drop_table('work')
    with op.batch_alter_table('report', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_report_task_id'))

    op.drop_table('report')
    with op.batch_alter_table('bug', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bug_task_id'))

    op.drop_table('bug')
    op.drop_table('apiurl')
    with op.batch_alter_table('apitest', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_apitest_task_id'))

    op.drop_table('apitest')
    op.drop_table('product')
    op.drop_table('user')
    # ### end Alembic commands ###
